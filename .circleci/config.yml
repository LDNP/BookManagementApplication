version: 2.1

workflows:
  version: 2
  build:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: main

jobs:
  build:
    working_directory: ~/BookManagementApplication
    docker:
      - image: cimg/node:18.20.7
    steps:
      - checkout

      - run:
          name: update-npm-version
          command: npm install -g npm@10.8.2

      - restore_cache:
          key: dependency-cache-{{ checksum "frontend/package-lock.json" }}

      - run:
          name: install-frontend-dependencies
          command: cd frontend && npm install --legacy-peer-deps

      - run:
          name: build-react-app
          command: cd frontend && npm run build

      - save_cache:
          paths:
            - ~/.npm
          key: dependency-cache-{{ checksum "frontend/package-lock.json" }}

      - setup_remote_docker

      - run:
          name: docker-login
          command: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      - run:
          name: build-docker-image
          command: docker build -t $IMAGE_NAME:latest .

      - run:
          name: push-docker-image
          command: docker push $IMAGE_NAME:latest

      - run:
          name: set-environment-variables
          command: echo "$SERVER_CRT" > server.crt && echo "$PRIVATE_KEY_PEM" > privatekey.pem

      - run:
          name: build-docker-image-for-integration-environment
          command: docker create -p 8443:8443 --name integration_app $IMAGE_NAME

      - run:
          name: copy-server-cert-and-private-key-across
          command: |
            docker cp ./privatekey.pem integration_app:/app/backend/privatekey.pem
            docker cp ./server.crt integration_app:/app/backend/server.crt

      - run:
          name: start-docker-container
          command: docker start integration_app

      - run:
          name: run-owasp-zap-scanner
          command: |
            ip_address=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' integration_app)
            docker run --network container:integration_app ghcr.io/zaproxy/zaproxy:stable zap-baseline.py -t https://$ip_address:8443 -r zap-report.html || true

  deploy:
    docker:
      - image: cimg/node:18.20.7
    steps:
      - checkout

      - run:
          name: deploy-application
          command: |
            ssh -i StrictHostKeyChecking=no $EC2_USERNAME@$EC2_PUBLIC_DNS "
              export SERVER=\"$SERVER\";
              export IMAGE_NAME=\"$IMAGE_NAME\";
              export CONTAINER_NAME=\"$CONTAINER_NAME\";
              export PRIVATE_KEY=\"$PRIVATE_KEY\";
              rm -rf BookManagementApplication/;
              git clone https://github.com/LDNP/BookManagementApplication.git;
              cd BookManagementApplication;
              chmod +x deploy.sh;
              ./deploy.sh"